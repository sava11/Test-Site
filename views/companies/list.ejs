<style>
  .company-box {
    transition: background-color 0.2s ease, box-shadow 0.2s ease;
    cursor: pointer;
  }

  .company-box:hover {
    background-color: #363636; /* –¢—ë–º–Ω—ã–π —Å–µ—Ä—ã–π (–∏–ª–∏ –¥—Ä—É–≥–æ–π, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å) */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
  }

  .company-box:hover h2 {
    text-decoration: underline;
  }
</style>

<section class="section">
  <h1 class="title">–°–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π</h1>

  <!-- –§–æ—Ä–º–∞ –ø–æ–∏—Å–∫–∞ -->
  <form action="/companies/search" method="get" class="box">
    <div class="field">
      <label class="label" for="searchTerm">–ü–æ–∏—Å–∫ –∫–æ–º–ø–∞–Ω–∏–π</label>
      <div class="control">
        <input class="input" type="text" name="searchTerm" id="searchTerm" value="<%= typeof searchTerm !== 'undefined' ? searchTerm : '' %>" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏">
      </div>
    </div>

    <div class="field mb-4">
      <label class="label mr-2">–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ:</label>
      <div class="control">
        <div class="select">
          <select id="sortOrder" onchange="sortCompanies()">
            <option value="asc">—Å –Ω–∞—á–∞–ª–∞</option>
            <option value="desc">—Å –∫–æ–Ω—Ü–∞</option>
          </select>
        </div>
      </div>
    </div>

    <div class="field">
      <label class="label" for="categoryId">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
      <div class="control">
        <div class="select">
          <select name="categoryId" id="categoryId">
            <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
            <% categories.forEach(category => { %>
              <option value="<%= category.id %>" <%= selectedCategoryId == category.id ? 'selected' : '' %>><%= category.name %></option>
            <% }) %>
          </select>
        </div>
      </div>
    </div>

    <div class="field">
      <div class="control">
        <button class="button is-link" type="submit">–ò—Å–∫–∞—Ç—å</button>
      </div>
    </div>
  </form>

  <!-- –í—ã–≤–æ–¥ –∫–æ–º–ø–∞–Ω–∏–π -->
  <% if (companies && companies.length > 0) { %>
    <div id="company-list" class="columns is-multiline">
      <% if (self_user && self_user.status > 1) { %>
      <div class="column is-one-third">
        <a href="/companies/create" class="box is-block has-text-white">
          <h2 class="title">–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é</h2>
        </a>
      </div>
      <% } %>
      <% companies.forEach(company => { %>
        <div id="company-id-<%= company.id %>" class="column is-one-third">
          <a class="box is-block has-text-white" href="/companies/<%= company.id %>">
            <img src="/images/companies/<%= company.id %>", alt="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏">
            <div class="is-flex is-justify-content-space-between is-align-items-center mb-2">
              <h2 class="subtitle m-0"><%= company.name %></h2>
              <% if (self_user && self_user.status > 1) { %>
                <div class="buttons are-small ml-2">
                  <button class="button is-primary action-btn" data-href="/companies/edit/<%= company.id %>" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">üìù</button>
                  <button class="button is-danger action-btn" data-delete-id="<%= company.id %>" title="–£–¥–∞–ª–∏—Ç—å">‚ùå</button>
                </div>
              <% } %>
            </div>
            <p><%= company.description ? company.description.substring(0, 150) + '...' : '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç' %></p>
            <p><strong>–ê–¥—Ä–µ—Å:</strong> <%= company.address %></p>
          </a>
        </div>        
      <% }) %>
      <% if (self_user && self_user.status>1) { %>
      <script>
        function deleteCompany(companyId){
          fetch('/companies/delete/'+companyId, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          })
          .then(response => {
            if (!response.ok) {
              throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
            }
            return response.json();
          })
          .then(data => {
            // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω–Ω–æ–π/–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
            // window.location.href = data.ref;
            const list = document.getElementById("company-list");
            const div = document.getElementById(`company-id-${companyId}`);
            if (div) list.removeChild(div);
          })
          .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏.');
          });
        }
      </script>
      <% } %>
    </div>
  <% } else { %>
    <p>–ö–æ–º–ø–∞–Ω–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.</p>
  <% } %>
</section>
<script>
  function sortCompanies() {
    const order = document.getElementById("sortOrder").value;
    const container = document.getElementById("company-list");

    // –°–æ–±–∏—Ä–∞–µ–º –∫–æ–º–ø–∞–Ω–∏–∏, –∫—Ä–æ–º–µ –∫–Ω–æ–ø–∫–∏ "–¥–æ–±–∞–≤–∏—Ç—å"
    const items = Array.from(container.querySelectorAll(".column.is-one-third"))
      .filter(el => !el.querySelector("h2.title")); // –∏—Å–∫–ª—é—á–∞–µ–º "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é"

    items.sort((a, b) => {
      const nameA = a.querySelector("h2.subtitle").textContent.trim().toLowerCase();
      const nameB = b.querySelector("h2.subtitle").textContent.trim().toLowerCase();
      return order === "asc" ? nameA.localeCompare(nameB) : nameB.localeCompare(nameA);
    });

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–∫—Ä–æ–º–µ "–¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é", –µ—Å–ª–∏ –µ—Å—Ç—å)
    items.forEach(item => container.appendChild(item));
  }
  sortCompanies();
  // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞
  document.querySelectorAll('.action-btn[data-href]').forEach(btn => {
    btn.addEventListener('click', event => {
      event.stopPropagation();
      const href = btn.getAttribute('data-href');
      if (href) window.location.href = href;
    });
  });

  // –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
  document.querySelectorAll('.action-btn[data-delete-id]').forEach(btn => {
    btn.addEventListener('click', event => {
      event.stopPropagation();
      const companyId = btn.getAttribute('data-delete-id');
      if (!companyId) return;

      if (!confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∫–æ–º–ø–∞–Ω–∏—é?")) return;

      fetch('/companies/delete/' + companyId, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => {
        if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
        return response.json();
      })
      .then(data => {
        const div = document.getElementById(`company-id-${companyId}`);
        if (div) div.remove();
      })
      .catch(error => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é.');
      });
    });
  });
</script>

